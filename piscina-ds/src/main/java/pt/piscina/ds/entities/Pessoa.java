package pt.piscina.ds.entities;
// Generated 17/nov/2018 23:41:51 by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Pessoa generated by hbm2java
 */
@Entity
@Table(name = "pessoa", catalog = "gestgym", uniqueConstraints = @UniqueConstraint(columnNames = "nif"))
public class Pessoa implements java.io.Serializable {

	private Long id;
	private String nome;
	private String genero;
	private String nacionalidade;
	private String nif;
	private String rua;
	private String ruaComplemento;
	private String codPostal;
	private String localidade;
	private Date dataNascimento;
	private Byte seguro;
	private String nomePai;
	private String nomeMae;
	private Set<Utente> utentes = new HashSet<Utente>(0);
	private Set<DocIdentificacao> docIdentificacaos = new HashSet<DocIdentificacao>(0);
	private Set<Relacao> relacaosForPessoaId1 = new HashSet<Relacao>(0);
	private Set<Relacao> relacaosForPessoaId2 = new HashSet<Relacao>(0);
	private Set<Observacao> observacaos = new HashSet<Observacao>(0);
	private Set<CartaoAcesso> cartaoAcessos = new HashSet<CartaoAcesso>(0);
	private Set<Contacto> contactos = new HashSet<Contacto>(0);
	private Set<Horario> horarios = new HashSet<Horario>(0);
	private Set<Utente> utentes_1 = new HashSet<Utente>(0);

	public Pessoa() {
	}

	public Pessoa(String nome, String genero) {
		this.nome = nome;
		this.genero = genero;
	}

	public Pessoa(String nome, String genero, String nacionalidade, String nif, String rua, String ruaComplemento,
			String codPostal, String localidade, Date dataNascimento, Byte seguro, String nomePai, String nomeMae,
			Set<Utente> utentes, Set<DocIdentificacao> docIdentificacaos, Set<Relacao> relacaosForPessoaId1,
			Set<Relacao> relacaosForPessoaId2, Set<Observacao> observacaos, Set<CartaoAcesso> cartaoAcessos,
			Set<Contacto> contactos, Set<Horario> horarios, Set<Utente> utentes_1) {
		this.nome = nome;
		this.genero = genero;
		this.nacionalidade = nacionalidade;
		this.nif = nif;
		this.rua = rua;
		this.ruaComplemento = ruaComplemento;
		this.codPostal = codPostal;
		this.localidade = localidade;
		this.dataNascimento = dataNascimento;
		this.seguro = seguro;
		this.nomePai = nomePai;
		this.nomeMae = nomeMae;
		this.utentes = utentes;
		this.docIdentificacaos = docIdentificacaos;
		this.relacaosForPessoaId1 = relacaosForPessoaId1;
		this.relacaosForPessoaId2 = relacaosForPessoaId2;
		this.observacaos = observacaos;
		this.cartaoAcessos = cartaoAcessos;
		this.contactos = contactos;
		this.horarios = horarios;
		this.utentes_1 = utentes_1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "nome", nullable = false, length = 100)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "genero", nullable = false, length = 2)
	public String getGenero() {
		return this.genero;
	}

	public void setGenero(String genero) {
		this.genero = genero;
	}

	@Column(name = "nacionalidade", length = 50)
	public String getNacionalidade() {
		return this.nacionalidade;
	}

	public void setNacionalidade(String nacionalidade) {
		this.nacionalidade = nacionalidade;
	}

	@Column(name = "nif", unique = true, length = 20)
	public String getNif() {
		return this.nif;
	}

	public void setNif(String nif) {
		this.nif = nif;
	}

	@Column(name = "rua", length = 200)
	public String getRua() {
		return this.rua;
	}

	public void setRua(String rua) {
		this.rua = rua;
	}

	@Column(name = "rua_complemento", length = 50)
	public String getRuaComplemento() {
		return this.ruaComplemento;
	}

	public void setRuaComplemento(String ruaComplemento) {
		this.ruaComplemento = ruaComplemento;
	}

	@Column(name = "cod_postal", length = 8)
	public String getCodPostal() {
		return this.codPostal;
	}

	public void setCodPostal(String codPostal) {
		this.codPostal = codPostal;
	}

	@Column(name = "localidade", length = 50)
	public String getLocalidade() {
		return this.localidade;
	}

	public void setLocalidade(String localidade) {
		this.localidade = localidade;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_nascimento", length = 10)
	public Date getDataNascimento() {
		return this.dataNascimento;
	}

	public void setDataNascimento(Date dataNascimento) {
		this.dataNascimento = dataNascimento;
	}

	@Column(name = "seguro")
	public Byte getSeguro() {
		return this.seguro;
	}

	public void setSeguro(Byte seguro) {
		this.seguro = seguro;
	}

	@Column(name = "Nome_pai", length = 100)
	public String getNomePai() {
		return this.nomePai;
	}

	public void setNomePai(String nomePai) {
		this.nomePai = nomePai;
	}

	@Column(name = "nome_mae", length = 100)
	public String getNomeMae() {
		return this.nomeMae;
	}

	public void setNomeMae(String nomeMae) {
		this.nomeMae = nomeMae;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pessoa")
	public Set<Utente> getUtentes() {
		return this.utentes;
	}

	public void setUtentes(Set<Utente> utentes) {
		this.utentes = utentes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pessoa")
	public Set<DocIdentificacao> getDocIdentificacaos() {
		return this.docIdentificacaos;
	}

	public void setDocIdentificacaos(Set<DocIdentificacao> docIdentificacaos) {
		this.docIdentificacaos = docIdentificacaos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pessoaByPessoaId1")
	public Set<Relacao> getRelacaosForPessoaId1() {
		return this.relacaosForPessoaId1;
	}

	public void setRelacaosForPessoaId1(Set<Relacao> relacaosForPessoaId1) {
		this.relacaosForPessoaId1 = relacaosForPessoaId1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pessoaByPessoaId2")
	public Set<Relacao> getRelacaosForPessoaId2() {
		return this.relacaosForPessoaId2;
	}

	public void setRelacaosForPessoaId2(Set<Relacao> relacaosForPessoaId2) {
		this.relacaosForPessoaId2 = relacaosForPessoaId2;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pessoa")
	public Set<Observacao> getObservacaos() {
		return this.observacaos;
	}

	public void setObservacaos(Set<Observacao> observacaos) {
		this.observacaos = observacaos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pessoa")
	public Set<CartaoAcesso> getCartaoAcessos() {
		return this.cartaoAcessos;
	}

	public void setCartaoAcessos(Set<CartaoAcesso> cartaoAcessos) {
		this.cartaoAcessos = cartaoAcessos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pessoa")
	public Set<Contacto> getContactos() {
		return this.contactos;
	}

	public void setContactos(Set<Contacto> contactos) {
		this.contactos = contactos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pessoa")
	public Set<Horario> getHorarios() {
		return this.horarios;
	}

	public void setHorarios(Set<Horario> horarios) {
		this.horarios = horarios;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "pessoa_utente", catalog = "gestgym", joinColumns = {
			@JoinColumn(name = "pessoa_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "utente_id", nullable = false, updatable = false) })
	public Set<Utente> getUtentes_1() {
		return this.utentes_1;
	}

	public void setUtentes_1(Set<Utente> utentes_1) {
		this.utentes_1 = utentes_1;
	}

}
