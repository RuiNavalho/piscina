package pt.piscina.ds.entities;
// Generated 17/nov/2018 20:51:16 by Hibernate Tools 5.2.3.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Espaco generated by hbm2java
 */
@Entity
@Table(name = "espaco", catalog = "gestgym")
public class Espaco implements java.io.Serializable {

	private Long id;
	private Instalacao instalacao;
	private String descricao;
	private Set<Divisao> divisaos = new HashSet<Divisao>(0);

	public Espaco() {
	}

	public Espaco(Instalacao instalacao, String descricao) {
		this.instalacao = instalacao;
		this.descricao = descricao;
	}

	public Espaco(Instalacao instalacao, String descricao, Set<Divisao> divisaos) {
		this.instalacao = instalacao;
		this.descricao = descricao;
		this.divisaos = divisaos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "instalacao_id", nullable = false)
	public Instalacao getInstalacao() {
		return this.instalacao;
	}

	public void setInstalacao(Instalacao instalacao) {
		this.instalacao = instalacao;
	}

	@Column(name = "descricao", nullable = false, length = 100)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "espaco")
	public Set<Divisao> getDivisaos() {
		return this.divisaos;
	}

	public void setDivisaos(Set<Divisao> divisaos) {
		this.divisaos = divisaos;
	}

}
