package pt.piscina.ds.entities;
// Generated 17/nov/2018 20:51:16 by Hibernate Tools 5.2.3.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Relacao generated by hbm2java
 */
@Entity
@Table(name = "relacao", catalog = "gestgym")
public class Relacao implements java.io.Serializable {

	private RelacaoId id;
	private Pessoa pessoaByPessoaId1;
	private Pessoa pessoaByPessoaId2;
	private TipoRelacao tipoRelacao;

	public Relacao() {
	}

	public Relacao(RelacaoId id, Pessoa pessoaByPessoaId1, Pessoa pessoaByPessoaId2, TipoRelacao tipoRelacao) {
		this.id = id;
		this.pessoaByPessoaId1 = pessoaByPessoaId1;
		this.pessoaByPessoaId2 = pessoaByPessoaId2;
		this.tipoRelacao = tipoRelacao;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "pessoaId1", column = @Column(name = "pessoa_id_1", nullable = false)),
			@AttributeOverride(name = "pessoaId2", column = @Column(name = "pessoa_id_2", nullable = false)),
			@AttributeOverride(name = "tipoRelacaoId", column = @Column(name = "tipo_relacao_id", nullable = false)) })
	public RelacaoId getId() {
		return this.id;
	}

	public void setId(RelacaoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pessoa_id_1", nullable = false, insertable = false, updatable = false)
	public Pessoa getPessoaByPessoaId1() {
		return this.pessoaByPessoaId1;
	}

	public void setPessoaByPessoaId1(Pessoa pessoaByPessoaId1) {
		this.pessoaByPessoaId1 = pessoaByPessoaId1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pessoa_id_2", nullable = false, insertable = false, updatable = false)
	public Pessoa getPessoaByPessoaId2() {
		return this.pessoaByPessoaId2;
	}

	public void setPessoaByPessoaId2(Pessoa pessoaByPessoaId2) {
		this.pessoaByPessoaId2 = pessoaByPessoaId2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tipo_relacao_id", nullable = false, insertable = false, updatable = false)
	public TipoRelacao getTipoRelacao() {
		return this.tipoRelacao;
	}

	public void setTipoRelacao(TipoRelacao tipoRelacao) {
		this.tipoRelacao = tipoRelacao;
	}

}
