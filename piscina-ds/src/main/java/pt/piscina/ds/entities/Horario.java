package pt.piscina.ds.entities;
// Generated 17/nov/2018 20:51:16 by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Horario generated by hbm2java
 */
@Entity
@Table(name = "horario", catalog = "gestgym")
public class Horario implements java.io.Serializable {

	private Long id;
	private AtividadeEpoca atividadeEpoca;
	private Divisao divisao;
	private Periodo periodo;
	private Pessoa pessoa;
	private String descricao;
	private Date horaInicio;
	private Date horaFim;
	private int numSubstituicoes;
	private int maxInscricoes;
	private Date dataInicio;
	private Date dataFim;
	private Set<UtenteHorario> utenteHorarios = new HashSet<UtenteHorario>(0);

	public Horario() {
	}

	public Horario(AtividadeEpoca atividadeEpoca, Divisao divisao, Periodo periodo, Pessoa pessoa, Date horaInicio,
			Date horaFim, int numSubstituicoes, int maxInscricoes, Date dataInicio, Date dataFim) {
		this.atividadeEpoca = atividadeEpoca;
		this.divisao = divisao;
		this.periodo = periodo;
		this.pessoa = pessoa;
		this.horaInicio = horaInicio;
		this.horaFim = horaFim;
		this.numSubstituicoes = numSubstituicoes;
		this.maxInscricoes = maxInscricoes;
		this.dataInicio = dataInicio;
		this.dataFim = dataFim;
	}

	public Horario(AtividadeEpoca atividadeEpoca, Divisao divisao, Periodo periodo, Pessoa pessoa, String descricao,
			Date horaInicio, Date horaFim, int numSubstituicoes, int maxInscricoes, Date dataInicio, Date dataFim,
			Set<UtenteHorario> utenteHorarios) {
		this.atividadeEpoca = atividadeEpoca;
		this.divisao = divisao;
		this.periodo = periodo;
		this.pessoa = pessoa;
		this.descricao = descricao;
		this.horaInicio = horaInicio;
		this.horaFim = horaFim;
		this.numSubstituicoes = numSubstituicoes;
		this.maxInscricoes = maxInscricoes;
		this.dataInicio = dataInicio;
		this.dataFim = dataFim;
		this.utenteHorarios = utenteHorarios;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "atividade_epoca_id", nullable = false)
	public AtividadeEpoca getAtividadeEpoca() {
		return this.atividadeEpoca;
	}

	public void setAtividadeEpoca(AtividadeEpoca atividadeEpoca) {
		this.atividadeEpoca = atividadeEpoca;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "divisao_id", nullable = false)
	public Divisao getDivisao() {
		return this.divisao;
	}

	public void setDivisao(Divisao divisao) {
		this.divisao = divisao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "periodo_id", nullable = false)
	public Periodo getPeriodo() {
		return this.periodo;
	}

	public void setPeriodo(Periodo periodo) {
		this.periodo = periodo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "responsavel_id", nullable = false)
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@Column(name = "descricao", length = 45)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "hora_inicio", nullable = false, length = 8)
	public Date getHoraInicio() {
		return this.horaInicio;
	}

	public void setHoraInicio(Date horaInicio) {
		this.horaInicio = horaInicio;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "hora_fim", nullable = false, length = 8)
	public Date getHoraFim() {
		return this.horaFim;
	}

	public void setHoraFim(Date horaFim) {
		this.horaFim = horaFim;
	}

	@Column(name = "num_substituicoes", nullable = false)
	public int getNumSubstituicoes() {
		return this.numSubstituicoes;
	}

	public void setNumSubstituicoes(int numSubstituicoes) {
		this.numSubstituicoes = numSubstituicoes;
	}

	@Column(name = "max_inscricoes", nullable = false)
	public int getMaxInscricoes() {
		return this.maxInscricoes;
	}

	public void setMaxInscricoes(int maxInscricoes) {
		this.maxInscricoes = maxInscricoes;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_inicio", nullable = false, length = 10)
	public Date getDataInicio() {
		return this.dataInicio;
	}

	public void setDataInicio(Date dataInicio) {
		this.dataInicio = dataInicio;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_fim", nullable = false, length = 10)
	public Date getDataFim() {
		return this.dataFim;
	}

	public void setDataFim(Date dataFim) {
		this.dataFim = dataFim;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "horario")
	public Set<UtenteHorario> getUtenteHorarios() {
		return this.utenteHorarios;
	}

	public void setUtenteHorarios(Set<UtenteHorario> utenteHorarios) {
		this.utenteHorarios = utenteHorarios;
	}

}
