package pt.piscina.ds.entities;
// Generated 17/nov/2018 20:51:16 by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Utente generated by hbm2java
 */
@Entity
@Table(name = "utente", catalog = "gestgym")
public class Utente implements java.io.Serializable {

	private Long id;
	private Pessoa pessoa;
	private TipoUtente tipoUtente;
	private String numUtente;
	private Date dataInicio;
	private Date dataFim;
	private String descricao;
	private Set<Pessoa> pessoas = new HashSet<Pessoa>(0);
	private Set<UtenteHorario> utenteHorarios = new HashSet<UtenteHorario>(0);

	public Utente() {
	}

	public Utente(Pessoa pessoa, TipoUtente tipoUtente, String numUtente, Date dataInicio, Date dataFim) {
		this.pessoa = pessoa;
		this.tipoUtente = tipoUtente;
		this.numUtente = numUtente;
		this.dataInicio = dataInicio;
		this.dataFim = dataFim;
	}

	public Utente(Pessoa pessoa, TipoUtente tipoUtente, String numUtente, Date dataInicio, Date dataFim,
			String descricao, Set<Pessoa> pessoas, Set<UtenteHorario> utenteHorarios) {
		this.pessoa = pessoa;
		this.tipoUtente = tipoUtente;
		this.numUtente = numUtente;
		this.dataInicio = dataInicio;
		this.dataFim = dataFim;
		this.descricao = descricao;
		this.pessoas = pessoas;
		this.utenteHorarios = utenteHorarios;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pessoa_id", nullable = false)
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tipo_utente_id", nullable = false)
	public TipoUtente getTipoUtente() {
		return this.tipoUtente;
	}

	public void setTipoUtente(TipoUtente tipoUtente) {
		this.tipoUtente = tipoUtente;
	}

	@Column(name = "num_utente", nullable = false, length = 100)
	public String getNumUtente() {
		return this.numUtente;
	}

	public void setNumUtente(String numUtente) {
		this.numUtente = numUtente;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_inicio", nullable = false, length = 10)
	public Date getDataInicio() {
		return this.dataInicio;
	}

	public void setDataInicio(Date dataInicio) {
		this.dataInicio = dataInicio;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_fim", nullable = false, length = 10)
	public Date getDataFim() {
		return this.dataFim;
	}

	public void setDataFim(Date dataFim) {
		this.dataFim = dataFim;
	}

	@Column(name = "descricao", length = 45)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "pessoa_utente", catalog = "gestgym", joinColumns = {
			@JoinColumn(name = "utente_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "pessoa_id", nullable = false, updatable = false) })
	public Set<Pessoa> getPessoas() {
		return this.pessoas;
	}

	public void setPessoas(Set<Pessoa> pessoas) {
		this.pessoas = pessoas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utente")
	public Set<UtenteHorario> getUtenteHorarios() {
		return this.utenteHorarios;
	}

	public void setUtenteHorarios(Set<UtenteHorario> utenteHorarios) {
		this.utenteHorarios = utenteHorarios;
	}

}
